<div class="form-group" aria-required="true">
  <div class="formRow">
    <%= form.label :featured_memory_id, class: 'control-label' %>
    <%= form.text_field :featured_memory_id, class: 'form-control', data: {featured_memory_id: true} %>
    <% home_page.errors[:featured_memory].each do |error| %>
      <span class="help-block"><%= error %></span>
    <% end -%>
  </div>
</div>

<%= form.hidden_field :remote_hero_image_url, data: {remote_url: true}, class: 'image_url' %>

<%= render 'shared/image_editor', form: form,
                                image_url: home_page.hero_image_url,
                                display_class: 'hero',
                                width: 1140,
                                height: 525 %>

<div class="form-group" aria-required="true">
  <div class="formRow">
    <%= form.label :featured_scrapbook_id, class: 'control-label' %>
    <%= form.text_field :featured_scrapbook_id, class: 'form-control', data: {featured_scrapbook_id: true} %>
    <% home_page.errors[:featured_scrapbook].each do |error| %>
      <span class="help-block"><%= error %></span>
    <% end -%>
  </div>
</div>

<%= content_for :script_tags  do %>
  <script>
    var $remote_url = $('[data-remote-url]')
      , $featured_memory_id = $('[data-featured-memory-id]')
      , $featured_scrapbook_id = $('[data-featured-scrapbook-id]');

    var clearErrorsOn = function (element) {
      var formGroup = element.closest('.form-group');

      formGroup.removeClass('field_with_errors');
      formGroup.find('.formRow .help-block').remove();
    }

    var showError = function (errorMessage, element) {
      var formGroup = element.closest('.form-group');

      $(formGroup).addClass('field_with_errors');
      $(formGroup).find('.formRow').append('<span class="help-block">' + errorMessage + '</span>');
    };

    var didSuccessfullyFetchMemory = function (data) {
      var id = $($featured_memory_id).val(),
          errorMessage;

      if (data.type === 'Written') {
        errorMessage = 'This memory is a Written memory. You must select a Picture memory.';
      } else if (data.file === null) {
        errorMessage = 'This memory does not have a picture attached.';
      }

      if (errorMessage) {
        $("#image-editor").hide();
        showError(errorMessage, $featured_memory_id);
      } else {
        $remote_url.val(data.file.url).trigger('change');
      }
    };

    var didSuccessfullyFetchScrapbook = function (data) {
      var id = $($featured_scrapbook_id).val()
        , requiredNumMemories = <%= HomePage::REQUIRED_SCRAPBOOK_MEMORIES %>
        , errorMessage;

      if (data.memories === null || data.memories.length < requiredNumMemories) {
        errorMessage = 'Featured scrapbook must contain at least ' + requiredNumMemories + ' memories.';
      }

      if (errorMessage) {
        showError(errorMessage, $featured_scrapbook_id);
      }
    };

    var didErrorOnFetchMemory = function (error) {
      var errorMessage = checkForErrors(error, $featured_memory_id.val(), 'memory');
      if (errorMessage) {
        $("#image-editor").hide();
        showError(errorMessage, $featured_memory_id);
      }
    }

    var didErrorOnFetchScrapbook = function (error) {
      var errorMessage = checkForErrors(error, $featured_scrapbook_id.val(), 'scrapbook');
      if (errorMessage) {
        showError(errorMessage, $featured_scrapbook_id);
      }
    };

    var checkForErrors = function (error, id, itemName) {
      var errorMessage;

      if (error.status === 404) {
        errorMessage = 'Could not find a publicly visible ' + itemName + ' with ID "' + id + '"';
      } else {
        errorMessage = 'An error occurred. Please try refreshing the page and try again.'
      }
      return errorMessage;
    }

    $featured_memory_id.on('change', function (e, data) {
      var url = '/memories/' + $featured_memory_id.val();

      clearErrorsOn($featured_memory_id);

      $.ajax({
        url: url,
        method:'GET',
        dataType: 'json'
      }).done(didSuccessfullyFetchMemory)
        .error(didErrorOnFetchMemory);
    });

    $featured_scrapbook_id.on('change', function (e, data) {
      var url = '/scrapbooks/' + $featured_scrapbook_id.val();

      clearErrorsOn($featured_scrapbook_id);

      $.ajax({
        url: url,
        method:'GET',
        dataType: 'json'
      }).done(didSuccessfullyFetchScrapbook)
        .error(didErrorOnFetchScrapbook);
    });
  </script>
<% end %>

